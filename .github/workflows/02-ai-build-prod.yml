name: CI-pipeline prod

on:
  pull_request:
    branches:
      - main
    paths:
      - 'app/**'
  workflow_dispatch:
  
env:
  SLACK_WEBHOOK_URL: ${{ vars.slack }}
  KAFKASLACK_WEBHOOK_URL: ${{ vars.kafka }}

jobs:
  # unit-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.9'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #         if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

  #     - name: Run unit tests
  #       run: pytest

  build:
    #needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          platforms: linux/arm64
          push: false
          tags: determinas/vecap_ai:${{ github.sha }}


      -- name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: "success,failure,warnings"
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *BUILD AI SERVICE* {status_message} in <{repo_url}|{repo}>"
          footer: "For Vec-App Project"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - KAFKA_SERVERS=${KAFKA_SERVERS}
    depends_on:
      - postgres
      - kafka
      - redis

  agent-coordinator:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.agent
    environment:
      - KAFKA_SERVERS=${KAFKA_SERVERS}
    depends_on:
      - kafka

  postgres:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=vecapp
    ports:
      - "5432:5432"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/vecapp
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your_secret_key
      - DEBUG=True
    depends_on:
      - db
      - redis
      - nlp_service

  nlp_service:
    image: huggingface/transformers-nlp
    ports:
      - "8501:8501"
    environment:
      - MODEL_NAME=distilbert-base-uncased-finetuned-sst-2-english
    volumes:
      - nlp_models:/models

  pdf_service:
    image: python:3.9
    volumes:
      - ./pdf_service:/app
    working_dir: /app
    command: pip install reportlab && python -m http.server 8080
    ports:
      - "8080:8080"

volumes:
  postgres_data:
  grafana_data:
  nlp_models: 
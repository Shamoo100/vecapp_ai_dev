""""create base tables with correct schema prefixes"

Revision ID: d13110eea55b
Revises: 
Create Date: 2025-07-01 08:26:47.785744+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd13110eea55b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_decision_audit',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('person_id', sa.UUID(), nullable=False),
    sa.Column('rule_id', sa.String(length=100), nullable=True),
    sa.Column('rule_description', sa.String(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('triggered', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='demo'
    )
    op.create_table('ai_recommendation_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('person_id', sa.UUID(), nullable=False),
    sa.Column('fam_id', sa.UUID(), nullable=True),
    sa.Column('module_name', sa.String(length=50), nullable=True),
    sa.Column('recommended_entity_type', sa.String(length=50), nullable=True),
    sa.Column('recommended_entity_id', sa.String(length=50), nullable=True),
    sa.Column('recommendation_score', sa.Integer(), nullable=True),
    sa.Column('recommendation_tier', sa.String(length=25), nullable=True),
    sa.Column('rationale', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='demo'
    )
    op.create_table('ai_suppression_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('person_id', sa.UUID(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('module_name', sa.String(length=50), nullable=True),
    sa.Column('suppressed_entity_id', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='demo'
    )
    op.create_table('tenant',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_name', sa.String(length=255), nullable=False),
    sa.Column('tenant_type', sa.String(length=50), nullable=True),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=255), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('social_links', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tenant_address', sa.String(length=255), nullable=True),
    sa.Column('tenant_city', sa.String(length=255), nullable=True),
    sa.Column('tenant_state', sa.String(length=255), nullable=True),
    sa.Column('tenant_country', sa.String(length=255), nullable=True),
    sa.Column('tenant_country_code', sa.String(length=10), nullable=True),
    sa.Column('zip', sa.String(length=10), nullable=True),
    sa.Column('landmark', sa.String(length=255), nullable=True),
    sa.Column('tenant_timezone', sa.String(length=255), nullable=True),
    sa.Column('parish_name', sa.String(length=255), nullable=True),
    sa.Column('branch', sa.String(length=255), nullable=True),
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.Column('tenant_head', sa.UUID(), nullable=True),
    sa.Column('tenant_status', sa.String(length=255), nullable=True),
    sa.Column('adult_consent', sa.Integer(), server_default=sa.text('16'), nullable=False),
    sa.Column('member_data_retention_period', sa.Integer(), server_default=sa.text('30'), nullable=False),
    sa.Column('team_deletion_grace_period', sa.Integer(), server_default=sa.text('30'), nullable=False),
    sa.Column('group_deletion_grace_period', sa.Integer(), server_default=sa.text('30'), nullable=False),
    sa.Column('tenant_date_created', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('domain', name='tenant_domain_unique'),
    schema='demo'
    )
    op.create_table('visitors',
    sa.Column('visitor_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=False),
    sa.Column('race', sa.String(length=50), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('marital_status', sa.Enum('SINGLE', 'MARRIED', 'DIVORCED', 'WIDOWED', name='maritalstatus'), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('preferred_communication_method', sa.Enum('EMAIL', 'PHONE', 'SMS', 'MAIL', name='communicationmethod'), nullable=False),
    sa.Column('best_contact_time', sa.String(length=50), nullable=False),
    sa.Column('receive_devotionals', sa.Boolean(), nullable=False),
    sa.Column('occupation', sa.String(length=100), nullable=False),
    sa.Column('relocated', sa.Boolean(), nullable=False),
    sa.Column('how_heard', sa.String(length=100), nullable=False),
    sa.Column('joining_church_consideration', sa.Boolean(), nullable=False),
    sa.Column('joining_church_contact_time', sa.String(length=50), nullable=False),
    sa.Column('prayer_request', sa.Text(), nullable=False),
    sa.Column('feedback', sa.Text(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('visitor_id'),
    sa.UniqueConstraint('email', 'phone', name='uix_visitor_contact')
    )
    op.create_index('idx_visitor_name', 'visitors', ['first_name', 'last_name'], unique=False)
    op.create_table('person',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('user_type_id', sa.Integer(), nullable=True),
    sa.Column('fam_id', sa.Integer(), nullable=True),
    sa.Column('bulk_upload_history_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('maiden_name', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('dob', sa.String(), nullable=True),
    sa.Column('marital_status', sa.String(), nullable=True),
    sa.Column('race', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('zip', sa.String(), nullable=True),
    sa.Column('landmark', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('profile_pic_url', sa.String(), nullable=True),
    sa.Column('fcm_token', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('preferred_comm_method', sa.String(), nullable=True),
    sa.Column('avatar_color', sa.String(), nullable=True),
    sa.Column('member_status', sa.String(), nullable=True),
    sa.Column('ministry_department', sa.String(), nullable=True),
    sa.Column('advert_team', sa.String(), nullable=True),
    sa.Column('volunteer_type', sa.String(), nullable=True),
    sa.Column('baptism_location', sa.String(), nullable=True),
    sa.Column('baptism_date', sa.String(), nullable=True),
    sa.Column('conversion_date', sa.String(), nullable=True),
    sa.Column('membership_date', sa.String(), nullable=True),
    sa.Column('join_date', sa.String(), nullable=True),
    sa.Column('how_join', sa.String(), nullable=True),
    sa.Column('joined_via', sa.String(), nullable=True),
    sa.Column('highest_qualification', sa.String(), nullable=True),
    sa.Column('school', sa.String(), nullable=True),
    sa.Column('course', sa.String(), nullable=True),
    sa.Column('employment_status', sa.String(), nullable=True),
    sa.Column('employer', sa.String(), nullable=True),
    sa.Column('profession', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('job_title', sa.String(), nullable=True),
    sa.Column('grade', sa.String(), nullable=True),
    sa.Column('visibility', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('has_account', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('is_volunteer', sa.Boolean(), nullable=True),
    sa.Column('is_graduated', sa.Boolean(), nullable=True),
    sa.Column('is_flag', sa.Boolean(), nullable=True),
    sa.Column('is_adult', sa.Boolean(), nullable=True),
    sa.Column('is_logout', sa.Boolean(), nullable=True),
    sa.Column('is_deactivated', sa.Boolean(), nullable=True),
    sa.Column('first_time_login', sa.Boolean(), nullable=True),
    sa.Column('is_archive', sa.Boolean(), nullable=True),
    sa.Column('notification_active', sa.Boolean(), nullable=True),
    sa.Column('just_relocated', sa.Boolean(), nullable=True),
    sa.Column('consider_joining', sa.Boolean(), nullable=True),
    sa.Column('import_status', sa.Boolean(), nullable=True),
    sa.Column('registration_link_status', sa.Boolean(), nullable=True),
    sa.Column('resend_link', sa.Boolean(), nullable=True),
    sa.Column('social_links', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('family_relationship', sa.String(), nullable=True),
    sa.Column('family_status', sa.String(), nullable=True),
    sa.Column('login_status', sa.String(), nullable=True),
    sa.Column('prayer_request', sa.String(), nullable=True),
    sa.Column('daily_devotional', sa.String(), nullable=True),
    sa.Column('feedback', sa.String(), nullable=True),
    sa.Column('deactivated_reason', sa.String(), nullable=True),
    sa.Column('time_to_contact', sa.String(), nullable=True),
    sa.Column('joining_our_church', sa.String(), nullable=True),
    sa.Column('spiritual_need', sa.String(), nullable=True),
    sa.Column('spiritual_challenge', sa.String(), nullable=True),
    sa.Column('email_fail_reason', sa.String(), nullable=True),
    sa.Column('family_date_added', sa.String(), nullable=True),
    sa.Column('last_login', sa.String(), nullable=True),
    sa.Column('session_expiry', sa.String(), nullable=True),
    sa.Column('invited_on', sa.String(), nullable=True),
    sa.Column('deleted_at', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['demo.tenant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='demo'
    )
    op.create_index(op.f('ix_demo_person_fam_id'), 'person', ['fam_id'], unique=False, schema='demo')
    op.create_index(op.f('ix_demo_person_id'), 'person', ['id'], unique=False, schema='demo')
    op.create_index(op.f('ix_demo_person_tenant_id'), 'person', ['tenant_id'], unique=False, schema='demo')
    op.create_index(op.f('ix_demo_person_user_type_id'), 'person', ['user_type_id'], unique=False, schema='demo')
    op.create_table('reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('church_branch_id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('date_range_start', sa.Date(), nullable=True),
    sa.Column('date_range_end', sa.Date(), nullable=True),
    sa.Column('purpose', sa.String(length=255), nullable=True),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('generated_by', sa.String(length=255), nullable=True),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['church_branch_id'], ['demo.tenant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='demo'
    )
    op.create_table('family_members',
    sa.Column('family_member_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('visitor_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('family_relationship', sa.Enum('SPOUSE', 'CHILD', 'PARENT', 'SIBLING', 'OTHER', name='familyrelationship'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['visitor_id'], ['visitors.visitor_id'], ),
    sa.PrimaryKeyConstraint('family_member_id'),
    sa.UniqueConstraint('email', 'phone', name='uix_family_contact')
    )
    op.create_index('idx_family_relationship', 'family_members', ['family_relationship'], unique=False)
    op.create_table('ai_feedback_analysis',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('person_id', sa.UUID(), nullable=False),
    sa.Column('feedback_category', sa.String(length=100), nullable=True),
    sa.Column('tone', sa.String(length=25), nullable=True),
    sa.Column('suggested_action', sa.Text(), nullable=True),
    sa.Column('feedback_text', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['demo.person.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='demo'
    )
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('person_id', sa.UUID(), nullable=True),
    sa.Column('task_assignee_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('recipient_fam_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('notes_body', sa.String(), nullable=True),
    sa.Column('note_link', sa.String(), nullable=True),
    sa.Column('note_photos', sa.String(), nullable=True),
    sa.Column('file_attachment', sa.String(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=False),
    sa.Column('ai_generated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['demo.person.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=False)
    op.drop_table('alembic_version')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name='alembic_version_pkc')
    )
    op.drop_index(op.f('ix_notes_id'), table_name='notes')
    op.drop_table('notes')
    op.drop_table('ai_feedback_analysis', schema='demo')
    op.drop_index('idx_family_relationship', table_name='family_members')
    op.drop_table('family_members')
    op.drop_table('reports', schema='demo')
    op.drop_index(op.f('ix_demo_person_user_type_id'), table_name='person', schema='demo')
    op.drop_index(op.f('ix_demo_person_tenant_id'), table_name='person', schema='demo')
    op.drop_index(op.f('ix_demo_person_id'), table_name='person', schema='demo')
    op.drop_index(op.f('ix_demo_person_fam_id'), table_name='person', schema='demo')
    op.drop_table('person', schema='demo')
    op.drop_index('idx_visitor_name', table_name='visitors')
    op.drop_table('visitors')
    op.drop_table('tenant', schema='demo')
    op.drop_table('ai_suppression_log', schema='demo')
    op.drop_table('ai_recommendation_log', schema='demo')
    op.drop_table('ai_decision_audit', schema='demo')
    # ### end Alembic commands ###
